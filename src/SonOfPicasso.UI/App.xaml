<Application x:Class="SonOfPicasso.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:viewModels="clr-namespace:SonOfPicasso.UI.ViewModels"
             xmlns:converters="clr-namespace:SonOfPicasso.UI.Converters">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <converters:DataTypeConverter x:Key="DataTypeConverter" />

                    <Style x:Key="TextBoxError" TargetType="TextBox">
                        <Setter Property="BorderBrush" Value="Red" />

                        <!-- https://github.com/dotnet/wpf/blob/c271205b80c27df976acbd7236ec637090d127c1/src/Microsoft.DotNet.Wpf/src/Themes/XAML/TextBox.xaml#L415-L441 -->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                                      HorizontalScrollBarVisibility="Hidden"
                                                      VerticalScrollBarVisibility="Hidden" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- https://github.com/dotnet/wpf/blob/c271205/src/Microsoft.DotNet.Wpf/src/Themes/XAML/TreeViewItem.xaml#L468-L541 -->
                    <Style x:Key="ImageContainerTreeViewItem" TargetType="{x:Type TreeViewItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Converter={StaticResource DataTypeConverter}}"
                                         Value="{x:Type viewModels:ImageContainerViewModel}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                            <StackPanel>
                                                <ContentPresenter ContentSource="Header"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                <ItemsPresenter x:Name="ItemsHost"
                                                                Visibility="Visible" />
                                            </StackPanel>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected"
                                                         Value="true">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected"
                                                                   Value="true" />
                                                        <Condition Property="IsSelectionActive"
                                                                   Value="false" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                                                </MultiTrigger>
                                                <Trigger Property="IsEnabled"
                                                         Value="false">
                                                    <Setter Property="Foreground"
                                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>

                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>